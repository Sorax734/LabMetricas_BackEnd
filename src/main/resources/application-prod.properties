# Production Configuration for Render
spring.application.name=labmetricasdb

# Database Configuration (using environment variables)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/labmetricas}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Properties for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false

# PostgreSQL specific configurations
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Logging Configuration
logging.level.root=WARN
logging.level.com.labMetricas=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN

# JWT Configuration
jwt_secret=${JWT_SECRET:}
jwt_expiration=${JWT_EXPIRATION:3600000}
jwt_expiration_recovery=${JWT_EXPIRATION_RECOVERY:1800000}

# Server Configuration
server.port=${PORT:8080}

# Resend Email Configuration
resend.api.key=${RESEND_API_KEY:}
resend.default.sender=${RESEND_DEFAULT_SENDER:noreply@labmetricas.com.mx}
resend.domain=${RESEND_DOMAIN:labmetricas.com.mx}

# Frontend URL for CORS
frontend.url=${FRONTEND_URL:https://labmetricas.com.mx}

# Security Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}

# Allow bean definition overriding
spring.main.allow-bean-definition-overriding=true

# Disable banner in production
spring.banner.mode=off
